package LoginLombard;

import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

public class Login extends JFrame {

    /**
     * ************************************************************************
     */
    //Container components
    private JPanel p = new JPanel(new BorderLayout(0, 0));
    private JPanel eastP = new JPanel() {
        @Override
        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

            GradientPaint gp = new GradientPaint(0, 0, getBackground().brighter(), 0, 900, getBackground().darker().darker());

            g2d.setPaint(gp);
            g2d.fillRect(0, 0, 1204 / 8, 770);

            super.paintComponent(g);
        }
    };
    private JPanel westP = new JPanel() {
        @Override
        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

            GradientPaint gp = new GradientPaint(0, 0, getBackground().brighter(), 0, 900, getBackground().darker().darker());

            g2d.setPaint(gp);
            g2d.fillRect(0, 0, 1204 / 8, 770);

            super.paintComponent(g);
        }
    };
    private JPanel centerP = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 10));
    private int width = 1204, height = 750;
    /**
     * ************************************************************************
     */
    //West panel components
    private JButton inventoryB = new JButton("Inventory"),
            adminB = new JButton("Admin"),
            policeB = new JButton("Police & Gun"),
            configB = new JButton("Configuration"),
            supportB = new JButton("Support Info");
    private JLabel gapL = new JLabel();
    /**
     * ************************************************************************
     */
    //East panel components
    private JLabel[] fields = new JLabel[2];
    private JLabel field1L = new JLabel("Enhanced by"),
            field2L = new JLabel("Date Entered");
    private JLabel gap2 = new JLabel(),
            gap3 = new JLabel();
    /**
     * ************************************************************************
     */
    //Center panel components
    private JLabel titleL = new JLabel("Sign in");
    private Border lb = BorderFactory.createEmptyBorder();
    private JTextField userF = new JTextField();
    private JTextField passF1 = new JTextField();
    private JPasswordField passF = new JPasswordField();
    private JButton signB = new JButton("Sign in");
    private JLabel forgotL = new JLabel("Forgot password?");

    /**
     * ************************************************************************
     */
    public Login() {

        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
        }

        getContentPane().add(MainPanel());
        setSize(width, height);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setResizable(false);
        setTitle("Lombard");
    }

    private JPanel MainPanel() {
        p.add(EastPanel(), BorderLayout.EAST);
        p.add(WestPanel(), BorderLayout.WEST);
        p.add(CenterPanel(), BorderLayout.CENTER);

        return p;
    }

    private JPanel CenterPanel() {
        centerP.setLayout(null);
        centerP.setBackground(new Color(41, 75, 110));

        centerP.add(titleL);
        titleL.setFont(new Font("Arial", Font.BOLD, 30));
        titleL.setForeground(Color.white);
        titleL.setBounds(15, 150, 870, 40);
        //titleL.setBorder(BorderFactory.createLineBorder(Color.yellow));
        titleL.setVerticalAlignment(JLabel.TOP);
        titleL.setHorizontalAlignment(JLabel.CENTER);

        userF.setBounds(320, 200, 250, 35);
        passF1.setBounds(320, 245, 250, 35);
        passF.setBounds(320, 245, 250, 35);
        signB.setBounds(320, 290, 250, 35);
        forgotL.setBounds(320, 325, 250, 25);

        userF.setFont(new Font("Times New Roman", Font.BOLD, 15));
        passF.setFont(new Font("Times New Roman", Font.BOLD, 15));
        passF1.setFont(new Font("Times New Roman", Font.BOLD, 15));
        signB.setFont(new Font("Times New Roman", Font.BOLD, 18));

        userF.setForeground(Color.gray);
        passF1.setForeground(Color.gray);

        userF.setText("Enter Username...");
        passF1.setText("Enter Password...");
        passF.setVisible(false);

        userF.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (userF.getText().equals("Enter Username...")) {
                    userF.setForeground(Color.black);
                    userF.setText("");
                } else {
                    userF.selectAll();
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (userF.getText().equals("")) {
                    userF.setForeground(Color.gray);
                    userF.setText("Enter Username...");
                }
            }
        });
        passF1.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                centerP.remove(passF1);
                passF.setVisible(true);
            }

            @Override
            public void focusLost(FocusEvent e) {
            }
        });
        passF.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (!new String(passF.getPassword()).equals("")) {
                    passF.selectAll();
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (new String(passF.getPassword()).equals("")) {
                    passF.setVisible(false);
                    passF1.setVisible(true);
                    centerP.add(passF1);
                }
            }
        });
        signB.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //**************************
                String name = userF.getText();
                String pass = new String(passF.getPassword());

                //**************************
            }
        });
        forgotL.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getSource().equals(forgotL)) {
                    JOptionPane.showMessageDialog(rootPane, "Hello");
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                forgotL.setForeground(Color.blue.brighter());
            }

            @Override
            public void mouseExited(MouseEvent e) {
                forgotL.setForeground(Color.white);
            }
        });

        userF.setBorder(lb);
        passF.setBorder(lb);
        passF1.setBorder(lb);

        userF.setHorizontalAlignment(JTextField.CENTER);
        passF.setHorizontalAlignment(JPasswordField.CENTER);
        passF1.setHorizontalAlignment(JTextField.CENTER);

        forgotL.setForeground(Color.white);

        centerP.add(userF);
        centerP.add(passF1);
        centerP.add(passF);
        centerP.add(signB);
        centerP.add(forgotL);

        return centerP;
    }

    private JPanel EastPanel() {
        Dimension fieldDim = new Dimension(108, 29);
        eastP.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 0));
        eastP.setBackground(new Color(20, 75, 120));
        eastP.setPreferredSize(new Dimension(width / 8, height));
        eastP.setOpaque(false);
        eastP.setBorder(BorderFactory.createLineBorder(Color.black));

        gap2.setPreferredSize(new Dimension(110, 100));
        gap3.setPreferredSize(new Dimension(110, 25));

        for (int i = 0; i < fields.length; i++) {
            fields[i] = new JLabel();
            fields[i].setPreferredSize(fieldDim);
            fields[i].setIcon(new ImageIcon("textfield.jpg"));
        }

        field1L.setForeground(Color.white);
        field2L.setForeground(Color.white);

        field1L.setPreferredSize(fieldDim);
        field2L.setPreferredSize(fieldDim);

        field1L.setHorizontalAlignment(JLabel.LEFT);
        field2L.setHorizontalAlignment(JLabel.LEFT);

        eastP.add(gap2);
        eastP.add(field1L);
        eastP.add(fields[0]);
        eastP.add(gap3);
        eastP.add(field2L);
        eastP.add(fields[1]);

        return eastP;
    }

    private JPanel WestPanel() {
        Dimension buttonDim = new Dimension(110, 35);
        westP.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 25));
        westP.setBackground(new Color(20, 75, 120));
        westP.setPreferredSize(new Dimension(width / 8, height));
        westP.setOpaque(false);
        westP.setBorder(BorderFactory.createLineBorder(Color.black));

        inventoryB.setPreferredSize(buttonDim);
        adminB.setPreferredSize(buttonDim);
        policeB.setPreferredSize(buttonDim);
        configB.setPreferredSize(buttonDim);
        gapL.setPreferredSize(new Dimension(120, 350));
        supportB.setPreferredSize(new Dimension(130, 70));
        /*
         supportB.setBorder(BorderFactory.createEmptyBorder());
         supportB.setBackground(new Color(81, 109, 137).brighter());
         supportB.setForeground(Color.white);
         */
        //supportB.setBackground(new Color(41, 75, 250));
        supportB.setBorder(new LineBorder(new Color(20, 75, 120).darker(), 15, true));
        supportB.setFont(new Font("Arial", Font.BOLD, 15));
        supportB.setContentAreaFilled(true);
        supportB.setBorderPainted(true);

        westP.add(inventoryB);
        westP.add(adminB);
        westP.add(policeB);
        westP.add(configB);
        westP.add(gapL);
        westP.add(supportB);

        return westP;
    }

    public static void main(String[] args) {
        new Login().setVisible(true);
    }
}
