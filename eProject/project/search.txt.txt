
package LoginLombard;

import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;   
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class Search extends JFrame{

    /***************************************************************************/
    //Container components
    private JPanel p = new JPanel(new BorderLayout(0, 0));
    private JPanel eastP = new JPanel() {
        @Override
        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            
            GradientPaint gp = new GradientPaint(0, 0, getBackground().brighter(), 0, 900, getBackground().darker().darker());
            
            g2d.setPaint(gp);
            g2d.fillRect(0, 0, 1204/8, 770);
            
            super.paintComponent(g);
        }
    };
    private JPanel westP = new JPanel() {
        @Override
        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            
            GradientPaint gp = new GradientPaint(0, 0, getBackground().brighter(), 0, 900, getBackground().darker().darker());

            g2d.setPaint(gp);
            g2d.fillRect(0, 0, 1204/8, 770);
            
            super.paintComponent(g);
        }
    };
    private JPanel centerP = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 10));
    private int width = 1204, height = 750;
    
    /***************************************************************************/
    //West panel components

    private JButton inventoryB = new JButton("Inventory"),
            adminB = new JButton("Admin"),
            policeB = new JButton("Police & Gun"),
            configB = new JButton("Configuration"),
            supportB = new JButton("Support Info");
    
    private JLabel gapL = new JLabel();
    
    /***************************************************************************/
    //East panel components
    private JLabel[] fields = new JLabel[2];
    private JLabel field1L = new JLabel("Enhanced by"), 
            field2L = new JLabel("Date Entered");
    
    private JLabel gap2 = new JLabel(),
            gap3 = new JLabel();
    
    /***************************************************************************/
    //Center panel components
    
    private JLabel titleL = new JLabel("Search");
    
    private JPanel[] cmPanels = new JPanel[7];
    
    private Dimension cmPanelDim = new Dimension(210, 25);
    private Border lb =  BorderFactory.createEmptyBorder();
    
    private JComboBox sCate = new JComboBox(),
            sType = new JComboBox();
    private JTextField sName = new JTextField();
    private JButton sSearchB = new JButton("Search");
    private DefaultTableModel sModel = new DefaultTableModel();
    private JTable sTable = new JTable(sModel);
    private JScrollPane result = new JScrollPane(sTable);

    /***************************************************************************/

    public Search() {
        
        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
        }
        
        getContentPane().add(MainPanel());
        setSize(width, height);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setResizable(false);
        setTitle("Lombard");
    }
    
    private JPanel MainPanel() {
        p.add(EastPanel(), BorderLayout.EAST);
        p.add(WestPanel(), BorderLayout.WEST);
        p.add(CenterPanel(), BorderLayout.CENTER);
        
        return p;
    }
    
    private JPanel CenterPanel() {
        centerP.setLayout(null);
        centerP.setBackground(new Color(41, 75, 110));
        
        centerP.add(titleL);
        titleL.setFont(new Font("Arial", Font.BOLD, 30));
        titleL.setForeground(Color.white);
        titleL.setBounds(15, 10, width-(width/8), 30);
        titleL.setVerticalAlignment(JLabel.TOP);
        
        sName.setBorder(lb);
        
        sCate.setBounds(10, 50, 180, 30);
        sType.setBounds(200, 50, 180, 30);
        sName.setBounds(390, 50, 230, 30);
        sSearchB.setBounds(630, 50, 130, 30);
        result.setBounds(10, 100, 880, 550);
        
        sTable.addColumn(new TableColumn());
        sTable.addColumn(new TableColumn());
        sTable.addColumn(new TableColumn());
        sTable.addColumn(new TableColumn());
        sTable.addColumn(new TableColumn());
        
        sTable.setShowHorizontalLines(true);
        sTable.setShowVerticalLines(true);
        result.setBorder(BorderFactory.createLineBorder(Color.blue, 2));
        result.setVisible(false);
        
        sSearchB.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                result.setVisible(true);
            }
        });
        
        centerP.add(sCate);
        centerP.add(sType);
        centerP.add(sName);
        centerP.add(sSearchB);
        centerP.add(result);
        
        return centerP;
    }
    private JPanel EastPanel() {
        Dimension fieldDim = new Dimension(108, 29);
        eastP.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 0));
        eastP.setBackground(new Color(20, 75, 120));
        eastP.setPreferredSize(new Dimension(width/8, height));
        eastP.setOpaque(false);
        eastP.setBorder(BorderFactory.createLineBorder(Color.black));
        
        gap2.setPreferredSize(new Dimension(110, 100));
        gap3.setPreferredSize(new Dimension(110, 25));
        
        for (int i=0; i<fields.length; i++) {
            fields[i] = new JLabel();
            fields[i].setPreferredSize(fieldDim);
            fields[i].setIcon(new ImageIcon("textfield.jpg"));
        }
        
        field1L.setForeground(Color.white);
        field2L.setForeground(Color.white);
        
        field1L.setPreferredSize(fieldDim);
        field2L.setPreferredSize(fieldDim);
        
        field1L.setHorizontalAlignment(JLabel.LEFT);
        field2L.setHorizontalAlignment(JLabel.LEFT);
        
        eastP.add(gap2);
        eastP.add(field1L);
        eastP.add(fields[0]);
        eastP.add(gap3);
        eastP.add(field2L);
        eastP.add(fields[1]);
        
        return eastP;
    }
    private JPanel WestPanel() {
        Dimension buttonDim = new Dimension(110, 35);
        westP.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 25));
        westP.setBackground(new Color(20, 75, 120));
        westP.setPreferredSize(new Dimension(width/8, height));
        westP.setOpaque(false);
        westP.setBorder(BorderFactory.createLineBorder(Color.black));

        inventoryB.setPreferredSize(buttonDim);
        adminB.setPreferredSize(buttonDim);
        policeB.setPreferredSize(buttonDim);
        configB.setPreferredSize(buttonDim);
        gapL.setPreferredSize(new Dimension(120, 350));
        supportB.setPreferredSize(new Dimension(130, 70));
        /*
        supportB.setBorder(BorderFactory.createEmptyBorder());
        supportB.setBackground(new Color(81, 109, 137).brighter());
        supportB.setForeground(Color.white);
        */
        //supportB.setBackground(new Color(41, 75, 250));
        supportB.setBorder(new LineBorder(new Color(20, 75, 120).darker() , 15, true));
        supportB.setFont(new Font("Arial", Font.BOLD, 15));
        supportB.setContentAreaFilled(true);
        supportB.setBorderPainted(true);
        
        westP.add(inventoryB);
        westP.add(adminB);
        westP.add(policeB);
        westP.add(configB);
        westP.add(gapL);
        westP.add(supportB);

        return westP;
    }
    
    public static void main(String[] args) {
        new Search().setVisible(true);
    }
}
